{"version":3,"sources":["Header/Header.js","Feed/Post/TagList/TagList.js","Feed/Post/Post.js","Feed/Feed.js","Profile/Profile.js","models/post.model.js","CreatePost/CreatePost.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","bg","expand","Brand","href","src","style","height","Toggle","aria-controls","Collapse","id","Nav","to","Component","TagList","this","props","tags","map","tag","Post","state","like","setState","width","icon","faUserCircle","url","onDoubleClick","likePost","bind","alt","likes","onClick","heartFull","faHeart","faPaperPlane","faCommentDots","title","faClock","format","unix","time","Feed","posts","loading","fetch","then","res","json","sizeUnit","color","size","margin","post","image","Number","created","Profile","schema","yup","shape","min","max","required","notRequired","CreatePost","initialValues","validationSchema","postModel","name","type","aria-describedby","htmlFor","class","component","Form","Group","controlId","Label","column","value","onChange","handleChange","Button","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a6e0a76.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Header.scss';\nimport {Link} from \"react-router-dom\";\nimport {Navbar, Nav} from 'react-bootstrap';\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"Header\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"/\"><img src=\"https://www.goddess-c.com/assets/images/marketing/instagram/2475.new-instagram-text-logo.png\" style={{height:'40px'}}/></Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Link className=\"navbar-link\" to=\"/profile\">Profile</Link>\n                            <Link className=\"navbar-link\" to=\"/post/create\">New Post</Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport './TagList.scss';\n\nclass TagList extends Component {\n    render() {\n        return (\n            <div className=\"TagList\">\n                {this.props.tags.map(tag => {\n                    return <div className=\"tag\"> #{tag}</div>\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TagList;","import React, {Component} from 'react';\nimport './Post.scss';\nimport Moment from 'react-moment';\nimport TagList from \"./TagList/TagList\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart, faPaperPlane, faCommentDots} from '@fortawesome/free-regular-svg-icons';\nimport {faUserCircle, faClock, faHeart as heartFull} from '@fortawesome/free-solid-svg-icons';\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            like: false\n        }\n    }\n\n    likePost() {\n        this.setState({\n            like: !this.state.like\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Post\">\n                <div className=\"card\" style={{width: '400px', height: '550px'}}>\n                    <header className=\"header\">\n                        <span>{this.props.id}</span>\n                        <div><FontAwesomeIcon icon={faUserCircle} className=\"icon-user\"/></div>\n                    </header>\n                    <img src={this.props.url} className=\"card-img-top\" onDoubleClick={this.likePost.bind(this)} alt=\"...\"/>\n                    <div className=\"post-actions\">\n                        <span className=\"number-likes\">{this.props.likes} likes</span>\n                        <div className=\"actions-icons\">\n                            <div className=\"like\" onClick={this.likePost.bind(this)}>\n                                {this.state.like ?\n                                    <FontAwesomeIcon icon={heartFull} className=\"icon\"/> :\n                                    <FontAwesomeIcon icon={faHeart} className=\"icon\"/>}\n                            </div>\n                            <div className=\"comment\">\n                                <FontAwesomeIcon icon={faPaperPlane} className=\"icon\"/>\n                            </div>\n                            <div className=\"share\">\n                                <FontAwesomeIcon icon={faCommentDots} className=\"icon\"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-body\">\n                        <p className=\"card-text-title\">{this.props.title}</p>\n                        <TagList tags={this.props.tags}/>\n                        <small className=\"text-muted\">\n                            Last updated <FontAwesomeIcon icon={faClock} className=\"icon-time\"/>\n                            <Moment format=\" HH:MM - MMM DD\" unix>{this.props.time}</Moment>\n                        </small>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Post;","import React, {Component} from 'react';\nimport './Feed.scss'\nimport  Post from './Post/Post';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nclass Feed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts : [],\n            loading : false\n        }\n    }\n    componentDidMount() {\n        this.setState({loading: true});\n        fetch('https://my-json-server.typicode.com/evyros/fake-api/posts')\n            .then(res=> res.json())\n            .then(posts=>this.setState({posts, loading: false}))\n    }\n    render() {\n        return (\n            <div className=\"Feed\">\n                <div className=\"loading\">\n                    {this.state.loading ?\n                        <div>\n                            <BeatLoader\n                            sizeUnit={\"px\"}\n                            color={'#ff6377'}\n                            size={50}\n                            margin={2}\n                            loading={this.state.loading}/>\n                            <div>Loading...</div>\n                        </div> : null\n                    }\n                </div>\n                <div className=\"container\">\n                    {this.state.posts.map(post=>{\n                        return <Post url={post.image}\n                                     id={post.id}\n                                     title={post.title}\n                                     likes={post.likes}\n                                     tags={post.tags}\n                                     time={Number(post.created)}/>\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Feed;","import React, {Component} from 'react';\nimport './Profile.scss';\n\nclass Profile extends Component {\n    render() {\n        return (\n            <div className=\"Profile\">\n                Profile\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import * as yup from 'yup';\nlet schema = yup.object().shape({\n    title: yup.string().min(2).max(255).required('What is your title? need help?😏'),\n    image: yup.mixed().required('You must choose a picture to upload!😱'),\n    tags: yup.mixed().notRequired()\n});\nexport default  schema;","import React, {Component} from 'react';\nimport {Button, Form} from 'react-bootstrap';\nimport './CreatePost.scss';\nimport {Formik, Field, Form as FormYap, ErrorMessage} from 'formik';\nimport postModel from '../models/post.model';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\n\n\nclass CreatePost extends Component {\n    constructor(props) {\n        super(props);\n        this.state={tags: []}\n    }\n    handleChange(tags) {\n        this.setState({tags})\n    }\n    render() {\n        return (\n            <div className=\"CreatePost\">\n                <h1>Create Post</h1>\n                <Formik initialValues={{image: '', title: '', tags: ''}}\n                        validationSchema={postModel}>\n                    <FormYap className=\"col-xs-12 col-sm-6\">\n                        <div className=\"custom-file\">\n                            <Field name=\"image\"\n                                type=\"file\"\n                                className=\"custom-file-input\"\n                                id=\"inputGroupFile01\"\n                                aria-describedby=\"inputGroupFileAddon01\"/>\n                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n                                Choose your favorite image ✌🏻</label>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"image\" component=\"div\"/>\n                        </div>\n                        <Form.Group controlId=\"formUploadPost\">\n                            <Form.Label column=\"false\">Tittle</Form.Label>\n                            <Field name=\"title\" className=\"form-control\"/>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"title\" component=\"div\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadPost\">\n                            <Form.Label column=\"false\">Tags</Form.Label>\n                            <Field name=\"tags\">\n                                {()=> (\n                                    <TagsInput value={this.state.tags} onChange={this.handleChange.bind(this)} />\n                                )}\n                            </Field>\n                            <div className=\"badge badge-secondary\">Press 'Tab' or 'Enter' to add new tag</div>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"tags\" component=\"div\"/>\n                        </Form.Group>\n                        <Button className=\"button\" type=\"submit\">\n                            Share\n                        </Button>\n                    </FormYap>\n                </Formik>\n            </div>\n\n        );\n    }\n}\n\nexport default CreatePost;","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport Feed from \"./Feed/Feed\";\nimport Profile from \"./Profile/Profile\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport CreatePost from \"./CreatePost/CreatePost\";\n\nfunction App() {\n  return (\n      <Router>\n            <div className=\"App\">\n                <Header />\n                <main>\n                    <Switch>\n                        <Route path=\"/profile\">\n                            <Profile />\n                        </Route>\n                        <Route path=\"/post/create\">\n                                <CreatePost />\n                        </Route>\n                        <Route path=\"/\">\n                            <Feed />\n                        </Route>\n                    </Switch>\n                </main>\n            </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}