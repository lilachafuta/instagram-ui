{"version":3,"sources":["Header/Header.js","Feed/Post/TagList/TagList.js","Feed/Post/Post.js","Feed/Feed.js","Profile/Profile.js","models/post.model.js","CreatePost/CreatePost.js","models/register.model.js","Register/Register.js","models/login.model.js","Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Navbar","bg","expand","Brand","href","to","src","style","height","Toggle","aria-controls","Collapse","id","Nav","icon","faUserEdit","faUserCircle","Component","TagList","this","props","tags","map","tag","index","key","Post","state","like","setState","url","onDoubleClick","likePost","bind","alt","likes","onClick","heartFull","faHeart","faPaperPlane","faCommentDots","title","faClock","format","unix","time","Feed","posts","loading","fetch","then","res","json","sizeUnit","color","size","margin","post","image","Number","created","Profile","postModel","yup","shape","min","max","required","notRequired","CreatePost","toggle","initialValues","validationSchema","name","type","aria-describedby","htmlFor","class","component","Form","Group","controlId","Label","column","showComment","value","onChange","handleChange","Button","register","username","password","birthDate","gender","about","Register","Date","registerModel","placeholder","login","Login","loginModel","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83f22d4a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Header.scss';\nimport {Link} from \"react-router-dom\";\nimport {Navbar, Nav} from 'react-bootstrap';\nimport {faUserEdit, faUserCircle} from '@fortawesome/free-solid-svg-icons';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\n\n\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"Header\">\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"/\">\n                        <Link className=\"navbar-link\" to=\"/instagram-ui\">\n                            <img\n                                src=\"https://www.goddess-c.com/assets/images/marketing/instagram/2475.new-instagram-text-logo.png\"\n                                style={{height: '40px'}}/>\n                        </Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Link className=\"navbar-link\" to=\"/profile\">Profile</Link>\n                            <Link className=\"navbar-link\" to=\"/post/create\">New Post</Link>\n\n                        </Nav>\n                        <div className=\"login-register\">\n                            <Link className=\"navbar-link\" to=\"/register\"><FontAwesomeIcon icon={faUserEdit}/></Link>\n                            <Link className=\"navbar-link\" to=\"/login\"><FontAwesomeIcon icon={faUserCircle}/></Link>\n                        </div>\n                    </Navbar.Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport './TagList.scss';\n\nclass TagList extends Component {\n    render() {\n        return (\n            <div className=\"TagList\">\n                {this.props.tags.map((tag, index) => {\n                    return <div className=\"tag\" key={index}> #{tag}</div>\n                })}\n            </div>\n        );\n    }\n}\n\nexport default TagList;","import React, {Component} from 'react';\nimport './Post.scss';\nimport Moment from 'react-moment';\nimport TagList from \"./TagList/TagList\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faHeart, faPaperPlane, faCommentDots} from '@fortawesome/free-regular-svg-icons';\nimport {faUserCircle, faClock, faHeart as heartFull} from '@fortawesome/free-solid-svg-icons';\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            like: false\n        }\n    }\n\n    likePost() {\n        this.setState({\n            like: !this.state.like\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Post\">\n                <div className=\"card\">\n                    <article>\n                        <header className=\"header\">\n                            <span>{this.props.id}</span>\n                            <div><FontAwesomeIcon icon={faUserCircle} className=\"icon-user\"/></div>\n                        </header>\n                        <img src={this.props.url} className=\"card-img-top\" onDoubleClick={this.likePost.bind(this)}\n                             alt=\"...\"/>\n                        <div className=\"post-actions\">\n                            <span className=\"number-likes\">{this.props.likes} likes</span>\n                            <div className=\"actions-icons\">\n                                <div className=\"like\" onClick={this.likePost.bind(this)}>\n                                    {this.state.like ?\n                                        <FontAwesomeIcon icon={heartFull} className=\"icon\"/> :\n                                        <FontAwesomeIcon icon={faHeart} className=\"icon\"/>}\n                                </div>\n                                <div className=\"comment\">\n                                    <FontAwesomeIcon icon={faPaperPlane} className=\"icon\"/>\n                                </div>\n                                <div className=\"share\">\n                                    <FontAwesomeIcon icon={faCommentDots} className=\"icon\"/>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card-body\">\n                            <p className=\"card-text-title\">{this.props.title}</p>\n                            <TagList tags={this.props.tags}/>\n                            <small className=\"text-muted\">\n                                Last updated <FontAwesomeIcon icon={faClock} className=\"icon-time\"/>\n                                <Moment format=\" HH:MM - MMM DD\" unix>{this.props.time}</Moment>\n                            </small>\n                        </div>\n                    </article>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Post;","import React, {Component} from 'react';\nimport './Feed.scss'\nimport  Post from './Post/Post';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nclass Feed extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            posts : [],\n            loading : false\n        }\n    }\n    componentDidMount() {\n        this.setState({loading: true});\n        fetch('https://my-json-server.typicode.com/evyros/fake-api/posts')\n            .then(res=> res.json())\n            .then(posts=>this.setState({posts, loading: false}))\n    }\n    render() {\n        return (\n            <div className=\"Feed\">\n                <div className=\"loading\">\n                    {this.state.loading ?\n                        <div>\n                            <BeatLoader\n                            sizeUnit={\"px\"}\n                            color={'#ff6377'}\n                            size={50}\n                            margin={2}\n                            loading={this.state.loading}/>\n                            <div>Loading...</div>\n                        </div> : null\n                    }\n                </div>\n                <div className=\"container\">\n                    {this.state.posts.map(post=>{\n                        return <Post url={post.image}\n                                     id={post.id}\n                                     title={post.title}\n                                     likes={post.likes}\n                                     tags={post.tags}\n                                     time={Number(post.created)}/>\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Feed;","import React, {Component} from 'react';\nimport './Profile.scss';\n\nclass Profile extends Component {\n    render() {\n        return (\n            <div className=\"Profile\">\n                Profile\n            </div>\n        );\n    }\n}\n\nexport default Profile;","import * as yup from 'yup';\nlet postModel = yup.object().shape({\n    title: yup.string().min(2).max(255).required('What is your title? need help?😏'),\n    image: yup.mixed().required('You must choose a picture to upload!😱'),\n    tags: yup.mixed().notRequired()\n});\nexport default  postModel;","import React, {Component} from 'react';\nimport {Button, Form} from 'react-bootstrap';\nimport './CreatePost.scss';\nimport {Formik, Field, Form as FormYap, ErrorMessage} from 'formik';\nimport postModel from '../models/post.model';\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\n\n\nclass CreatePost extends Component {\n    constructor(props) {\n        super(props);\n        this.state={tags: [], toggle: false}\n    }\n    handleChange(tags) {\n        this.setState({tags})\n    }\n    showComment() {\n        this.setState({toggle: !this.state.toggle})\n    }\n    render() {\n        return (\n            <div className=\"CreatePost\">\n                <h1>Create Post 📸</h1>\n                <Formik initialValues={{image: '', title: '', tags: ''}}\n                        validationSchema={postModel}>\n                    <FormYap className=\"col-xs-12 col-sm-6\">\n                        <div className=\"custom-file\">\n                            <Field name=\"image\"\n                                type=\"file\"\n                                className=\"custom-file-input\"\n                                id=\"inputGroupFile01\"\n                                aria-describedby=\"inputGroupFileAddon01\"/>\n                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile01\">\n                                Choose your favorite image ✌🏻</label>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"image\" component=\"div\"/>\n                        </div>\n                        <Form.Group controlId=\"formUploadPost\">\n                            <Form.Label column=\"false\">Tittle</Form.Label>\n                            <Field name=\"title\" className=\"form-control\"/>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"title\" component=\"div\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formUploadPost\">\n                            <Form.Label column=\"false\">Tags</Form.Label>\n                            <div onClick={this.showComment.bind(this)}>\n                            <Field  name=\"tags\" >\n                                {()=> (\n                                    <TagsInput value={this.state.tags} onChange={this.handleChange.bind(this)} />\n                                )}\n                            </Field>\n                            </div>\n                            {this.state.toggle ?\n                                <div className=\"badge badge-secondary\">Press 'Tab' or 'Enter' to add new tag</div> :\n                            null}\n                            <ErrorMessage class=\"alert alert-dark\" name=\"tags\" component=\"div\"/>\n                        </Form.Group>\n                        <Button className=\"button\" type=\"submit\">\n                            Share\n                        </Button>\n                    </FormYap>\n                </Formik>\n            </div>\n\n        );\n    }\n}\n\nexport default CreatePost;","import * as yup from 'yup';\nlet register = yup.object().shape({\n    name: yup.string().min(2).max(30).required(),\n    username: yup.string().min(2).max(15).required(),\n    password: yup.string().min(8).max(16).required(),\n    birthDate: yup.date().required(),\n    gender: yup.string(),\n    about: yup.string()\n});\nexport default  register;","import React, {Component} from 'react';\nimport registerModel from '../models/register.model';\nimport {Formik, Field, Form as FormYap, ErrorMessage} from 'formik';\nimport {Button, Form} from \"react-bootstrap\";\nimport './Register.scss';\n\nclass Register extends Component {\n    render() {\n        return (\n            <div className=\"Register\">\n                <h1>Sing up!</h1>\n                <Formik initialValues={{name: '', username: '', password: '', birthDate:new Date(), gender: '', about: ''}}\n                        validationSchema={registerModel}>\n                    <FormYap className=\"col-xs-8 col-sm-6\">\n                        <Form.Group controlId=\"formRegister\">\n                            <Form.Label htmlFor=\"name\" column=\"false\">Name:</Form.Label>\n                            <Field name=\"name\" className=\"form-control\"/>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"name\" component=\"div\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formRegister\">\n                            <Form.Label column=\"false\">Username:</Form.Label>\n                            <Field name=\"username\" className=\"form-control\"/>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"username\" component=\"div\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formRegister\">\n                            <Form.Label column=\"false\">Password:</Form.Label>\n                            <Field name=\"password\" className=\"form-control\"/>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"password\" component=\"div\"/>\n                        </Form.Group>\n                        <div className=\"form-row\">\n                            <div className=\"col-6\">\n                                <Form.Group controlId=\"formRegister\">\n                                    <Form.Label column=\"false\">Birthdate:</Form.Label>\n                                    <Field name=\"birthDate\" className=\"form-control\" type=\"date\"/>\n                                    <ErrorMessage class=\"alert alert-dark\" name=\"birthDate\" component=\"div\"/>\n                                </Form.Group>\n                            </div>\n                            <div className=\"col-6\">\n                                <Form.Group controlId=\"formRegister\">\n                                    <Form.Label column=\"false\">Gender:</Form.Label>\n                                    <Field name=\"gender\" className=\"form-control\" placeholder=\"Select Gender\">\n                                        {() => (\n                                            <select className=\"form-control\" id=\"exampleFormControlSelect1\">\n                                                <option value=\"f\">Female</option>\n                                                <option value=\"m\">Male</option>\n                                            </select>\n                                        )}\n                                    </Field>\n                                    <ErrorMessage class=\"alert alert-dark\" name=\"gender\" component=\"div\"/>\n                                </Form.Group>\n                            </div>\n                        </div>\n                        <Form.Group controlId=\"formRegister\">\n                            <Form.Label column=\"false\">About:</Form.Label>\n                            <Field name=\"about\" className=\"form-control\"/>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"about\" component=\"div\"/>\n                        </Form.Group>\n                        <Button className=\"button\" type=\"submit\">\n                            Sign up!\n                        </Button>\n                    </FormYap>\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default Register;","import * as yup from 'yup';\nlet login = yup.object().shape({\n    username: yup.string().min(2).max(15).required(),\n    password: yup.string().min(8).max(16).required()\n});\nexport default  login;","import React, {Component} from 'react';\nimport {ErrorMessage, Field, Formik, Form as FormYap} from \"formik\";\nimport {Button, Form} from \"react-bootstrap\";\nimport loginModel from '../models/login.model';\nimport './Login.scss';\n\nclass Login extends Component {\n    render() {\n        return (\n            <div className=\"Login\">\n                <h1>Sing in!</h1>\n                <Formik initialValues={{username: '', password: ''}}\n                        validationSchema={loginModel}>\n                    <FormYap className=\"col-xs-8 col-sm-6\">\n                        <Form.Group controlId=\"formRegister\">\n                            <Form.Label column=\"false\">Username:</Form.Label>\n                            <Field name=\"username\" className=\"form-control\"/>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"username\" component=\"div\"/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formRegister\">\n                            <Form.Label column=\"false\">Password:</Form.Label>\n                            <Field name=\"password\" className=\"form-control\"/>\n                            <ErrorMessage class=\"alert alert-dark\" name=\"password\" component=\"div\"/>\n                        </Form.Group>\n                        <Button className=\"button\" type=\"submit\">\n                            Login!\n                        </Button>\n                    </FormYap>\n                </Formik>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport './App.scss';\nimport Header from \"./Header/Header\";\nimport Feed from \"./Feed/Feed\";\nimport Profile from \"./Profile/Profile\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport CreatePost from \"./CreatePost/CreatePost\";\nimport Register from \"./Register/Register\";\nimport Login from \"./Login/Login\";\n\nfunction App() {\n  return (\n      <Router>\n            <div className=\"App\">\n                <Header />\n                <main>\n                    <Switch>\n                        <Route path=\"/profile\">\n                            <Profile />\n                        </Route>\n                        <Route path=\"/post/create\">\n                                <CreatePost />\n                        </Route>\n                        <Route path=\"/register\">\n                            <Register />\n                        </Route>\n                        <Route path=\"/login\">\n                            <Login />\n                        </Route>\n                        <Route path=\"/\">\n                            <Feed />\n                        </Route>\n                    </Switch>\n                </main>\n            </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}